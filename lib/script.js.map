{"version":3,"sources":["../src/script.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","module","root","logHypot","b","_a","Math","abs","_b","log","cos","atan2","P","parse","dest","w","x","y","z","undefined","tokens","match","plus","minus","iMap","c","d","g","isNaN","parseFloat","numToStr","char","prev","ret","Quaternion","prototype","sqrt","norm","w1","x1","y1","z1","w2","x2","y2","z2","normSq","vNorm","wExp","exp","scale","sin","qNorm2","arg","loh","pow","mul","eps","isFinite","d2","wx","wy","wz","xx","xy","xz","yy","yz","zz","v","w3","x3","y3","z3","w4","x4","y4","z4","axis","angle","halfAngle","sin_norm","dot","normalize","phi","theta","psi","order","_x","_y","_z","cX","cY","cZ","sX","sY","sZ","define","count1","canvas","gl","NumVerticesSphere","NumVerticesAsteroid","count","sphereIndex","points","colors","va","vec4","vb","vc","vd","shipSpeed","refSize","refSpeed","bulletSize","bulletSpeed","viewBoxLength","initialNumberOfAsteroids","pitch","yaw","roll","eye","pitchAxis","yawAxis","rollAxis","deltaAngle","proLoc","mvLoc","keyPressed","vertices","triangle","push","quad","cube","divideTriangle","ab","mix","ac","bc","tetrahedron","List","start","end","counter","makeNode","data","next","id","add","remove","jo","changePos","position","direction","speed","radians","forward","pos","dir","Asteroid","size","floor","random","Array","changePosition","wrapIfOutOfBounds","Bullet","posB","slice","valueOf","interf","bulletList","window","onload","init","document","querySelector","WebGLUtils","setupWebGL","alert","viewport","width","height","clearColor","enable","DEPTH_TEST","program","initShaders","useProgram","vBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","flatten","STATIC_DRAW","vPosition","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","getUniformLocation","addEventListener","keyCode","render","asteroidList","setTimeout","requestAnimFrame","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","proj","perspective","uniformMatrix4fv","currentAsteroid","realSize","mv","mat4","mult","scalem","rotateY","translate","drawArrays","TRIANGLES","currentBullet"],"mappings":"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","file":"script.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n/**\n * @license Quaternion.js v2.0.0 22/02/2016\n *\n * Copyright (c) 2016, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n(function(root) {\n\n  'use strict';\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    return Math.log(a / Math.cos(Math.atan2(b, a)));\n  }\n\n  /*\n   * Default is the multiplicative one element\n   *\n   */\n  var P = {\n    'w': 1,\n    'x': 0,\n    'y': 0,\n    'z': 0\n  };\n\n  function parse(dest, w, x, y, z) {\n\n    // Most common internal use case with 4 params\n    if (z !== undefined) {\n      dest['w'] = w;\n      dest['x'] = x;\n      dest['y'] = y;\n      dest['z'] = z;\n      return;\n    }\n\n    if (typeof w === 'object' && y === undefined) {\n\n      // Check for quats, for example when an object gets cloned\n      if ('w' in w || 'x' in w || 'y' in w || 'z' in w) {\n        dest['w'] = w['w'] || 0;\n        dest['x'] = w['x'] || 0;\n        dest['y'] = w['y'] || 0;\n        dest['z'] = w['z'] || 0;\n        return;\n      }\n\n      // Check for complex numbers\n      if ('re' in w && 'im' in w) {\n        dest['w'] = w['re'];\n        dest['x'] = w['im'];\n        dest['y'] = 0;\n        dest['z'] = 0;\n        return;\n      }\n\n      // Check for array\n      if (w.length === 4) {\n        dest['w'] = w[0];\n        dest['x'] = w[1];\n        dest['y'] = w[2];\n        dest['z'] = w[3];\n        return;\n      }\n\n      // Check for augmented vector\n      if (w.length === 3) {\n        dest['w'] = 0;\n        dest['x'] = w[0];\n        dest['y'] = w[1];\n        dest['z'] = w[2];\n        return;\n      }\n\n      throw new Error('Invalid object');\n    }\n\n    // Parse string values\n    if (typeof w === 'string' && y === undefined) {\n\n      var tokens = w.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n      var plus = 1;\n      var minus = 0;\n\n      var iMap = {'i': 'x', 'j': 'y', 'k': 'z'};\n\n      if (tokens === null) {\n        throw new Error('Parse error');\n      }\n\n      // Reset the current state\n      dest['w'] =\n      dest['x'] =\n      dest['y'] =\n      dest['z'] = 0;\n\n      for (var i = 0; i < tokens.length; i++) {\n\n        var c = tokens[i];\n        var d = tokens[i + 1];\n\n        if (c === ' ' || c === '\\t' || c === '\\n') {\n          /* void */\n        } else if (c === '+') {\n          plus++;\n        } else if (c === '-') {\n          minus++;\n        } else {\n\n          if (plus + minus === 0) {\n            throw new Error('Parse error' + c);\n          }\n          var g = iMap[c];\n\n          // Is the current token an imaginary sign?\n          if (g !== undefined) {\n\n            // Is the following token a number?\n            if (d !== ' ' && !isNaN(d)) {\n              c = d;\n              i++;\n            } else {\n              c = '1';\n            }\n\n          } else {\n\n            if (isNaN(c)) {\n              throw new Error('Parser error');\n            }\n\n            g = iMap[d];\n\n            if (g !== undefined) {\n              i++;\n            }\n          }\n\n          dest[g || 'w'] += parseFloat((minus % 2 ? '-' : '') + c);\n          plus = minus = 0;\n        }\n      }\n\n      // Still something on the stack\n      if (plus + minus > 0) {\n        throw new Error('Parser error');\n      }\n      return;\n    }\n\n    // If no single variable was given AND it was the constructor, set it to the identity\n    if (w === undefined && dest !== P) {\n      dest['w'] = 1;\n      dest['x'] =\n        dest['y'] =\n          dest['z'] = 0;\n    } else {\n\n      dest['w'] = w || 0;\n\n      // Note: This isn't setFromAxis, it's just syntactic sugar!\n      if (x && x.length === 3) {\n        dest['x'] = x[0];\n        dest['y'] = x[1];\n        dest['z'] = x[2];\n      } else {\n        dest['x'] = x || 0;\n        dest['y'] = y || 0;\n        dest['z'] = z || 0;\n      }\n    }\n  }\n\n  function numToStr(n, char, prev) {\n\n    var ret = '';\n\n    if (n !== 0) {\n\n      if (prev !== '') {\n        ret += n < 0 ? ' - ' : ' + ';\n      } else if (n < 0) {\n        ret += '-';\n      }\n\n      n = Math.abs(n);\n\n      if (1 !== n || char === '') {\n        ret += n;\n      }\n      ret += char;\n    }\n    return ret;\n  }\n\n  /**\n   * Quaternion constructor\n   *\n   * @constructor\n   * @param {number|Object|string} w real\n   * @param {number=} x imag\n   * @param {number=} y imag\n   * @param {number=} z imag\n   * @returns {Quaternion}\n   */\n  function Quaternion(w, x, y, z) {\n\n    if (!(this instanceof Quaternion)) {\n      return new Quaternion(w, x, y, z);\n    }\n\n    parse(this, w, x, y, z);\n  }\n\n  Quaternion.prototype = {\n    'w': 1,\n    'x': 0,\n    'y': 0,\n    'z': 0,\n    /**\n     * Adds two quaternions Q1 and Q2\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {Quaternion}\n     */\n    'add': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      // Q1 + Q2 := [w1, v1] + [w2, v2] = [w1 + w2, v1 + v2]\n\n      return new Quaternion(\n        this['w'] + P['w'],\n        this['x'] + P['x'],\n        this['y'] + P['y'],\n        this['z'] + P['z']);\n    },\n    /**\n     * Subtracts a quaternions Q2 from Q1\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {Quaternion}\n     */\n    'sub': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      // Q1 - Q2 := Q1 + (-Q2)\n      //          = [w1, v1] - [w2, v2] = [w1 - w2, v1 - v2]\n\n      return new Quaternion(\n        this['w'] - P['w'],\n        this['x'] - P['x'],\n        this['y'] - P['y'],\n        this['z'] - P['z']);\n    },\n    /**\n     * Calculates the additive inverse, or simply it negates the quaternion\n     *\n     * @returns {Quaternion}\n     */\n    'neg': function() {\n\n      // -Q := [-w, -v]\n\n      return new Quaternion(-this['w'], -this['x'], -this['y'], -this['z']);\n    },\n    /**\n     * Calculates the length/modulus/magnitude or the norm of a quaternion\n     *\n     * @returns {number}\n     */\n    'norm': function() {\n\n      // |Q| := sqrt(|Q|^2)\n\n      // The unit quaternion has |Q| = 1\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      return Math.sqrt(w * w + x * x + y * y + z * z);\n    },\n    /**\n     * Calculates the squared length/modulus/magnitude or the norm of a quaternion\n     *\n     * @returns {number}\n     */\n    'normSq': function() {\n\n      // |Q|^2 := [w, v] * [w, -v]\n      //        = [w^2 + dot(v, v), -w * v + w * v + cross(v, -v)]\n      //        = [w^2 + |v|^2, 0]\n      //        = [w^2 + dot(v, v), 0]\n      //        = dot(Q, Q)\n      //        = Q * Q'\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      return w * w + x * x + y * y + z * z;\n    },\n    /**\n     * Normalizes the quaternion to have |Q| = 1 as long as the norm is not zero\n     * Alternative names are the signum, unit or versor\n     *\n     * @returns {Quaternion}\n     */\n    'normalize': function() {\n\n      // Q* := Q / |Q|\n\n      // unrolled Q.scale(1 / Q.norm())\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      var norm = Math.sqrt(w * w + x * x + y * y + z * z);\n\n      if (norm < Quaternion['EPSILON']) {\n        return Quaternion['ZERO'];\n      }\n\n      norm = 1 / norm;\n\n      return new Quaternion(w * norm, x * norm, y * norm, z * norm);\n    },\n    /**\n     * Calculates the Hamilton product of two quaternions\n     * Leaving out the imaginary part results in just scaling the quat\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {Quaternion}\n     */\n    'mul': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      // Q1 * Q2 = [w1 * w2 - dot(v1, v2), w1 * v2 + w2 * v1 + cross(v1, v2)]\n\n      // Not commutative because cross(v1, v2) != cross(v2, v1)!\n\n      var w1 = this['w'];\n      var x1 = this['x'];\n      var y1 = this['y'];\n      var z1 = this['z'];\n\n      var w2 = P['w'];\n      var x2 = P['x'];\n      var y2 = P['y'];\n      var z2 = P['z'];\n\n      return new Quaternion(\n        w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n        w1 * y2 + y1 * w2 + z1 * x2 - x1 * z2,\n        w1 * z2 + z1 * w2 + x1 * y2 - y1 * x2);\n    },\n    /**\n     * Scales a quaternion by a scalar, faster than using multiplication\n     *\n     * @param {number} s scaling factor\n     * @returns {Quaternion}\n     */\n    'scale': function(s) {\n\n      return new Quaternion(\n        this['w'] * s,\n        this['x'] * s,\n        this['y'] * s,\n        this['z'] * s);\n    },\n    /**\n     * Calculates the dot product of two quaternions\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {number}\n     */\n    'dot': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      // dot(Q1, Q2) := w1 * w2 + dot(v1, v2)\n\n      return this['w'] * P['w'] + this['x'] * P['x'] + this['y'] * P['y'] + this['z'] * P['z'];\n    },\n    /**\n     * Calculates the inverse of a quat for non-normalized quats such that\n     * Q^-1 * Q = 1 and Q * Q^-1 = 1\n     *\n     * @returns {Quaternion}\n     */\n    'inverse': function() {\n\n      // Q^-1 := Q' / |Q|^2\n      //       = [w / (w^2 + |v|^2), -v / (w^2 + |v|^2)]\n\n      // Proof:\n      // Q * Q^-1 = [w, v] * [w / (w^2 + |v|^2), -v / (w^2 + |v|^2)]\n      //          = [1, 0]\n      // Q^-1 * Q = [w / (w^2 + |v|^2), -v / (w^2 + |v|^2)] * [w, v]\n      //          = [1, 0].\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      var normSq = w * w + x * x + y * y + z * z;\n\n      if (normSq === 0) {\n        return Quaternion['ZERO']; // TODO: Is the result zero or one when the norm is zero?\n      }\n\n      normSq = 1 / normSq;\n\n      return new Quaternion(w * normSq, -x * normSq, -y * normSq, -z * normSq);\n    },\n    /**\n     * Multiplies a quaternion with the inverse of a second quaternion\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {Quaternion}\n     */\n    'div': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      // Q1 / Q2 := Q1 * Q2^-1\n\n      var w1 = this['w'];\n      var x1 = this['x'];\n      var y1 = this['y'];\n      var z1 = this['z'];\n\n      var w2 = P['w'];\n      var x2 = P['x'];\n      var y2 = P['y'];\n      var z2 = P['z'];\n\n      var normSq = w2 * w2 + x2 * x2 + y2 * y2 + z2 * z2;\n\n      if (normSq === 0) {\n        return Quaternion['ZERO']; // TODO: Is the result zero or one when the norm is zero?\n      }\n\n      normSq = 1 / normSq;\n\n      return new Quaternion(\n        (w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2) * normSq,\n        (x1 * w2 - w1 * x2 - y1 * z2 + z1 * y2) * normSq,\n        (y1 * w2 - w1 * y2 - z1 * x2 + x1 * z2) * normSq,\n        (z1 * w2 - w1 * z2 - x1 * y2 + y1 * x2) * normSq);\n    },\n    /**\n     * Calculates the conjugate of a quaternion\n     *\n     * @returns {Quaternion}\n     */\n    'conjugate': function() {\n\n      // Q' = [s, -v]\n\n      // If the quaternion is normalized,\n      // the conjugate is the inverse of the quaternion - but faster\n      // Q' * Q = Q * Q' = 1\n\n      // Additionally, the conjugate of a unit quaternion is a rotation with the same\n      // angle but the opposite axis.\n\n      // Moreover the following property holds:\n      // (Q1 * Q2)' = Q2' * Q1'\n\n      return new Quaternion(this['w'], -this['x'], -this['y'], -this['z']);\n    },\n    /**\n     * Calculates the natural exponentiation of the quaternion\n     *\n     * @returns {Quaternion}\n     */\n    'exp': function() {\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      var vNorm = Math.sqrt(x * x + y * y + z * z);\n      var wExp = Math.exp(w);\n      var scale = wExp / vNorm * Math.sin(vNorm);\n\n      if (vNorm === 0) {\n        //return new Quaternion(wExp * Math.cos(vNorm), 0, 0, 0);\n        return new Quaternion(wExp, 0, 0, 0);\n      }\n\n      return new Quaternion(\n        wExp * Math.cos(vNorm),\n        x * scale,\n        y * scale,\n        z * scale);\n    },\n    /**\n     * Calculates the natural logarithm of the quaternion\n     *\n     * @returns {Quaternion}\n     */\n    'log': function() {\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      if (y === 0 && z === 0) {\n        return new Quaternion(\n          logHypot(w, x),\n          Math.atan2(x, w), 0, 0);\n      }\n\n      var qNorm2 = x * x + y * y + z * z + w * w;\n      var vNorm = Math.sqrt(x * x + y * y + z * z);\n\n      var scale = Math.atan2(vNorm, w) / vNorm;\n\n      return new Quaternion(\n        Math.log(qNorm2) * 0.5,\n        x * scale,\n        y * scale,\n        z * scale);\n    },\n    /**\n     * Calculates the power of a quaternion raised to a real number or another quaternion\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {Quaternion}\n     */\n    'pow': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      if (P['y'] === 0 && P['z'] === 0) {\n\n        if (P['w'] === 1 && P['x'] === 0) {\n          return this;\n        }\n\n        if (P['w'] === 0 && P['x'] === 0) {\n          return Quaternion['ONE'];\n        }\n\n        // Check if we can operate in C\n        // Borrowed from complex.js\n        if (this['y'] === 0 && this['z'] === 0) {\n\n          var a = this['w'];\n          var b = this['x'];\n\n          if (a === 0 && b === 0) {\n            return Quaternion['ZERO'];\n          }\n\n          var arg = Math.atan2(b, a);\n          var loh = logHypot(a, b);\n\n          if (P['x'] === 0) {\n\n            if (b === 0 && a >= 0) {\n\n              return new Quaternion(Math.pow(a, P['w']), 0, 0, 0);\n\n            } else if (a === 0) {\n\n              switch (P['w'] % 4) {\n                case 0:\n                  return new Quaternion(Math.pow(b, P['w']), 0, 0, 0);\n                case 1:\n                  return new Quaternion(0, Math.pow(b, P['w']), 0, 0);\n                case 2:\n                  return new Quaternion(-Math.pow(b, P['w']), 0, 0, 0);\n                case 3:\n                  return new Quaternion(0, -Math.pow(b, P['w']), 0, 0);\n              }\n            }\n          }\n\n          a = Math.exp(P['w'] * loh - P['x'] * arg);\n          b = P['x'] * loh + P['w'] * arg;\n          return new Quaternion(\n            a * Math.cos(b),\n            a * Math.sin(b), 0, 0);\n        }\n      }\n\n      // Normal quaternion behavior\n      // q^p = e^ln(q^p) = e^(ln(q)*p)\n      return this.log().mul(P).exp();\n    },\n    /**\n     * Checks if two quats are the same\n     *\n     * @param {number|Object|string} w real\n     * @param {number=} x imag\n     * @param {number=} y imag\n     * @param {number=} z imag\n     * @returns {boolean}\n     */\n    'equals': function(w, x, y, z) {\n\n      parse(P, w, x, y, z);\n\n      var eps = Quaternion['EPSILON'];\n\n      // maybe check for NaN's here?\n      return Math.abs(P['w'] - this['w']) < eps\n        && Math.abs(P['x'] - this['x']) < eps\n        && Math.abs(P['y'] - this['y']) < eps\n        && Math.abs(P['z'] - this['z']) < eps;\n    },\n    /**\n     * Checks if all parts of a quaternion are finite\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n\n      return isFinite(this['w']) && isFinite(this['x']) && isFinite(this['y']) && isFinite(this['z']);\n    },\n    /**\n     * Checks if any of the parts of the quaternion is not a number\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n\n      return isNaN(this['w']) || isNaN(this['x']) || isNaN(this['y']) || isNaN(this['z']);\n    },\n    /**\n     * Gets the Quaternion as a well formatted string\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n      var ret = '';\n\n      if (isNaN(w) || isNaN(x) || isNaN(y) || isNaN(z)) {\n        return 'NaN';\n      }\n\n      // Alternative design?\n      // '(%f, [%f %f %f])'\n\n      ret = numToStr(w, '', ret);\n      ret += numToStr(x, 'i', ret);\n      ret += numToStr(y, 'j', ret);\n      ret += numToStr(z, 'k', ret);\n\n      if ('' === ret)\n        return '0';\n\n      return ret;\n    },\n    /**\n     * Returns the real part of the quaternion\n     *\n     * @returns {number}\n     */\n    'real': function() {\n\n      return this['w'];\n    },\n    /**\n     * Returns the imaginary part of the quaternion as a 3D vector / array\n     *\n     * @returns {Quaternion}\n     */\n    'imag': function() {\n\n      return [this['x'], this['y'], this['z']];\n    },\n    /**\n     * Gets the actual quaternion as a 4D vector / array\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['w'], this['x'], this['y'], this['z']];\n    },\n    /**\n     * Calculates the 3x3 rotation matrix for the current quat\n     *\n     * @param {boolean=} d2\n     * @see https://en.wikipedia.org/wiki/Rotation_matrix#Quaternion\n     * @returns {Array}\n     */\n    'toMatrix': function(d2) {\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      var n = w * w + x * x + y * y + z * z;\n      var s = n === 0 ? 0 : 2 / n;\n      var wx = s * w * x, wy = s * w * y, wz = s * w * z;\n      var xx = s * x * x, xy = s * x * y, xz = s * x * z;\n      var yy = s * y * y, yz = s * y * z, zz = s * z * z;\n\n      if (d2) {\n        return [\n          [1 - (yy + zz), xy - wz, xz + wy],\n          [xy + wz, 1 - (xx + zz), yz - wx],\n          [xz - wy, yz + wx, 1 - (xx + yy)]];\n      }\n\n      return [\n        1 - (yy + zz), xy - wz, xz + wy,\n        xy + wz, 1 - (xx + zz), yz - wx,\n        xz - wy, yz + wx, 1 - (xx + yy)];\n    },\n    /**\n     * Calculates the homogeneous 4x4 rotation matrix for the current quat\n     *\n     * @param {boolean=} d2\n     * @returns {Array}\n     */\n    'toMatrix4': function(d2) {\n\n      var w = this['w'];\n      var x = this['x'];\n      var y = this['y'];\n      var z = this['z'];\n\n      var n = w * w + x * x + y * y + z * z;\n      var s = n === 0 ? 0 : 2 / n;\n      var wx = s * w * x, wy = s * w * y, wz = s * w * z;\n      var xx = s * x * x, xy = s * x * y, xz = s * x * z;\n      var yy = s * y * y, yz = s * y * z, zz = s * z * z;\n\n      if (d2) {\n        return [\n          [1 - (yy + zz), xy - wz, xz + wy, 0],\n          [xy + wz, 1 - (xx + zz), yz - wx, 0],\n          [xz - wy, yz + wx, 1 - (xx + yy), 0],\n          [0, 0, 0, 1]];\n      }\n\n      return [\n        1 - (yy + zz), xy - wz, xz + wy, 0,\n        xy + wz, 1 - (xx + zz), yz - wx, 0,\n        xz - wy, yz + wx, 1 - (xx + yy), 0,\n        0, 0, 0, 1];\n    },\n    /**\n     * Clones the actual object\n     *\n     * @returns {Quaternion}\n     */\n    'clone': function() {\n\n      return new Quaternion(this);\n    },\n    /**\n     * Rotates a vector according to the current quaternion\n     *\n     * @param {Array} v The vector to be rotated\n     * @returns {Array}\n     */\n    'rotateVector': function(v) {\n\n      // [0, v'] = Q * [0, v] * Q'\n\n      // Q\n      var w1 = this['w'];\n      var x1 = this['x'];\n      var y1 = this['y'];\n      var z1 = this['z'];\n\n      // [0, v]\n      var w2 = 0;\n      var x2 = v[0];\n      var y2 = v[1];\n      var z2 = v[2];\n\n      // Q * [0, v]\n      var w3 = /*w1 * w2*/ -x1 * x2 - y1 * y2 - z1 * z2;\n      var x3 = w1 * x2 + /*x1 * w2 +*/ y1 * z2 - z1 * y2;\n      var y3 = w1 * y2 + /*y1 * w2 +*/ z1 * x2 - x1 * z2;\n      var z3 = w1 * z2 + /*z1 * w2 +*/ x1 * y2 - y1 * x2;\n\n      var w4 = w3 * w1 + x3 * x1 + y3 * y1 + z3 * z1;\n      var x4 = x3 * w1 - w3 * x1 - y3 * z1 + z3 * y1;\n      var y4 = y3 * w1 - w3 * y1 - z3 * x1 + x3 * z1;\n      var z4 = z3 * w1 - w3 * z1 - x3 * y1 + y3 * x1;\n\n      return [x4, y4, z4];\n    }\n  };\n\n  Quaternion['ZERO'] = new Quaternion(0, 0, 0, 0); // This is the additive identity Quaternion\n  Quaternion['ONE'] = new Quaternion(1, 0, 0, 0); // This is the multiplicative identity Quaternion\n  Quaternion['I'] = new Quaternion(0, 1, 0, 0);\n  Quaternion['J'] = new Quaternion(0, 0, 1, 0);\n  Quaternion['K'] = new Quaternion(0, 0, 0, 1);\n  Quaternion['EPSILON'] = 1e-16;\n\n  /**\n   * Creates quaternion by a rotation given as axis and angle\n   *\n   * @param {Array} axis The axis around which to rotate\n   * @param {number} angle The angle in radians\n   * @returns {Quaternion}\n   */\n  Quaternion['fromAxisAngle'] = function(axis, angle) {\n\n    // Q = [cos(angle / 2), v * sin(angle / 2)]\n\n    var halfAngle = angle * 0.5;\n\n    var a = axis[0];\n    var b = axis[1];\n    var c = axis[2];\n\n    var sin = Math.sin(halfAngle);\n    var cos = Math.cos(halfAngle);\n\n    var sin_norm = sin / Math.sqrt(a * a + b * b + c * c);\n\n    return new Quaternion(cos, a * sin_norm, b * sin_norm, c * sin_norm);\n  };\n\n  /**\n   * Calculates the quaternion to rotate one vector onto the other\n   *\n   * @param {Array} u\n   * @param {Array} v\n   */\n  Quaternion['fromBetweenVectors'] = function(u, v) {\n\n    var a = u[0];\n    var b = u[1];\n    var c = u[2];\n\n    var x = v[0];\n    var y = v[1];\n    var z = v[2];\n\n    var dot = a * x + b * y + c * z;\n    var w1 = b * z - c * y;\n    var w2 = c * x - a * z;\n    var w3 = a * y - b * x;\n\n    return new Quaternion(\n      dot + Math.sqrt(dot * dot + w1 * w1 + w2 * w2 + w3 * w3),\n      w1,\n      w2,\n      w3\n    ).normalize();\n  };\n\n  /**\n   * Creates a quaternion by a rotation given by Euler angles\n   *\n   * @param {number} phi\n   * @param {number} theta\n   * @param {number} psi\n   * @param {string=} order\n   * @returns {Quaternion}\n   */\n  Quaternion['fromEuler'] = function(phi, theta, psi, order) {\n\n    var _x = theta * 0.5;\n    var _y = psi * 0.5;\n    var _z = phi * 0.5;\n\n    var cX = Math.cos(_x);\n    var cY = Math.cos(_y);\n    var cZ = Math.cos(_z);\n\n    var sX = Math.sin(_x);\n    var sY = Math.sin(_y);\n    var sZ = Math.sin(_z);\n\n    if (order === undefined || order === 'ZXY') {\n      return new Quaternion(\n        cX * cY * cZ - sX * sY * sZ,\n        sX * cY * cZ - cX * sY * sZ,\n        cX * sY * cZ + sX * cY * sZ,\n        cX * cY * sZ + sX * sY * cZ);\n    }\n\n    if (order === 'XYZ') {\n      return new Quaternion(\n        cX * cY * cZ - sX * sY * sZ,\n        sX * cY * cZ + cX * sY * sZ,\n        cX * sY * cZ - sX * cY * sZ,\n        cX * cY * sZ + sX * sY * cZ);\n    }\n\n    if (order === 'YXZ') {\n      return new Quaternion(\n        cX * cY * cZ + sX * sY * sZ,\n        sX * cY * cZ + cX * sY * sZ,\n        cX * sY * cZ - sX * cY * sZ,\n        cX * cY * sZ - sX * sY * cZ);\n    }\n\n    if (order === 'ZYX') {\n      return new Quaternion(\n        cX * cY * cZ + sX * sY * sZ,\n        sX * cY * cZ - cX * sY * sZ,\n        cX * sY * cZ + sX * cY * sZ,\n        cX * cY * sZ - sX * sY * cZ);\n    }\n\n    if (order === 'YZX') {\n      return new Quaternion(\n        cX * cY * cZ - sX * sY * sZ,\n        sX * cY * cZ + cX * sY * sZ,\n        cX * sY * cZ + sX * cY * sZ,\n        cX * cY * sZ - sX * sY * cZ);\n    }\n\n    if (order === 'XZY') {\n      return new Quaternion(\n        cX * cY * cZ + sX * sY * sZ,\n        sX * cY * cZ - cX * sY * sZ,\n        cX * sY * cZ - sX * cY * sZ,\n        cX * cY * sZ + sX * sY * cZ);\n    }\n    return null;\n  };\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Quaternion;\n    });\n  } else if (typeof exports === 'object') {\n    module['exports'] = Quaternion;\n  } else {\n    root['Quaternion'] = Quaternion;\n  }\n\n})(this);\n\n},{}],2:[function(require,module,exports){\n/*\n\n  Asteroids in 3D\n*/\nvar count1 = 1;\nconst Quaternion = require('quaternion');\n\nlet canvas;\nlet gl;\n\nlet NumVerticesSphere = 0;\nlet NumVerticesAsteroid = 36;\n\nlet count = 5;\n\nconst sphereIndex = 0;\n\nconst points = [];\nconst colors = [];\n\nconst va = vec4(0.0, 0.0, -1.0,1);\nconst vb = vec4(0.0, 0.942809, 0.333333, 1);\nconst vc = vec4(-0.816497, -0.471405, 0.333333, 1);\nconst vd = vec4(0.816497, -0.471405, 0.333333,1);\n\nconst shipSpeed = 0.04;\n\nconst refSize = 0.2;\nconst refSpeed = 0.01;\n\nconst bulletSize = 0.005;\nconst bulletSpeed = 0.03;\n\nconst viewBoxLength = 20.0;\n\nconst initialNumberOfAsteroids = 20;\n\nlet pitch = 0.0;\nlet yaw = 0.0;\nlet roll = 0.0;\nlet eye = [0.0, 0.0, 0.0];\nlet pitchAxis = [1.0, 0.0, 0.0];\nlet yawAxis = [0.0, 1.0, 0.0];\nlet rollAxis = [0.0, 0.0, -1.0];\nconst deltaAngle = 1;\n\n\nlet proLoc;\nlet mvLoc;\n\nconst keyPressed = {};\n\nconst vertices = [\n  vec4( -0.5, -0.5,  0.5, 1.0 ),\n  vec4( -0.5,  0.5,  0.5, 1.0 ),\n  vec4(  0.5,  0.5,  0.5, 1.0 ),\n  vec4(  0.5, -0.5,  0.5, 1.0 ),\n  vec4( -0.5, -0.5, -0.5, 1.0 ),\n  vec4( -0.5,  0.5, -0.5, 1.0 ),\n  vec4(  0.5,  0.5, -0.5, 1.0 ),\n  vec4(  0.5, -0.5, -0.5, 1.0 )\n];\n\nfunction triangle(a, b, c) {\n\n  points.push(a);\n  points.push(b);\n  points.push(c);\n\n  NumVerticesSphere+= 3;\n}\n\nfunction quad(a, b, c, d) {\n  points.push(vertices[a]);\n  points.push(vertices[b]);\n  points.push(vertices[c]);\n  points.push(vertices[a]);\n  points.push(vertices[c]);\n  points.push(vertices[d]);\n}\n\n\nfunction cube() {\n  quad( 1, 0, 3, 2 );\n  quad( 2, 3, 7, 6 );\n  quad( 3, 0, 4, 7 );\n  quad( 6, 5, 1, 2 );\n  quad( 4, 5, 6, 7 );\n  quad( 5, 4, 0, 1 );\n}\n\nfunction divideTriangle(a, b, c, count) {\n  if ( count > 0 ) {\n\n    var ab = mix( a, b, 0.5);\n    var ac = mix( a, c, 0.5);\n    var bc = mix( b, c, 0.5);\n\n    ab = normalize(ab, true);\n    ac = normalize(ac, true);\n    bc = normalize(bc, true);\n\n    divideTriangle( a, ab, ac, count - 1 );\n    divideTriangle( ab, b, bc, count - 1 );\n    divideTriangle( bc, c, ac, count - 1 );\n    divideTriangle( ab, bc, ac, count - 1 );\n  }\n  else {\n    triangle( a, b, c );\n  }\n}\n\n\nfunction tetrahedron(a, b, c, d, n) {\n    divideTriangle(a, b, c, n);\n    divideTriangle(d, c, b, n);\n    divideTriangle(a, d, b, n);\n    divideTriangle(a, c, d, n);\n}\n\nfunction List() {\n  this.start = null;\n  this.end = null;\n  this.counter = 0;\n}\n\nList.makeNode = function () {\n  return { data: null, next: null, prev: null, id: null};\n};\n\nList.prototype.add = function(data) {\n  if (this.start===null){\n    this.start=List.makeNode();\n    this.end=this.start;\n  } else {\n    this.end.next = List.makeNode();\n    this.end.next.prev = this.end;\n    this.end = this.end.next;\n  }\n  this.end.data = data;\n}\n\nList.prototype.remove = function(id) {\n  let jo = this.start;\n\n  while (jo != null) {\n    if (jo.id === id) {\n      jo.prev.next = jo.next;\n    } else {\n      jo = jo.next;\n    }\n  }\n}\n\nfunction changePos(position, direction, speed) {\n  position[0] += speed*Math.cos(radians(direction[0]))*Math.cos(radians(direction[1]));\n  position[1] += speed*Math.sin(radians(direction[0]))*Math.cos(radians(direction[1]));\n  position[2] += speed*Math.cos(radians(direction[0]))*Math.sin(radians(direction[1]));\n  return position;\n}\n\n\nfunction forward(pos, dir, speed) {\n  pos[0] -= speed*Math.sin(radians(dir));\n  pos[2] -= speed*Math.cos(radians(dir));\n  return pos;\n}\n\n//Asteroid \"Class\" description:\n// Three types of sizes for asteroids.\n// If value is zero then it is not drawn\n// Vector of length maxNumber.\n// Possible values : {0, 1, 2, 3}\n\n\n// Two angles theta and phi for 3D direction\n// Matrix of size maxNumber x 2\n// -180 < theta < 180\n// -90< phi < 90\nfunction Asteroid() {\n\n  this.size = Math.floor(Math.random()*3.0) + 1.0;\n\n  let pos = new Array(3);\n  pos[0] = Math.random()*(viewBoxLength-this.size) - (viewBoxLength-this.size)/2.0;\n  pos[1] = Math.random()*(viewBoxLength-this.size) - (viewBoxLength-this.size)/2.0;\n  pos[2] = Math.random()*(viewBoxLength-this.size) - (viewBoxLength-this.size)/2.0;\n  this.position = pos;\n\n  let dir = new Array(2);\n  dir[0] = Math.random()*360 - 180;\n  dir[1] = Math.random()*180 - 90;\n  this.direction = dir;\n\n  this.speed = (4-this.size)*refSpeed;\n}\nAsteroid.prototype.changePosition = function() {\n  this.position = changePos(this.position, this.direction, this.speed);\n};\n\nAsteroid.prototype.wrapIfOutOfBounds = function() {\n  let pos = this.position;\n  if(pos[0] < -viewBoxLength){\n      pos[0] = viewBoxLength;\n  }\n  if(pos[0] > viewBoxLength){\n      pos[0] = -viewBoxLength;\n  }\n  if(pos[1] < -viewBoxLength){\n      pos[1] = viewBoxLength;\n  }\n  if(pos[1] > viewBoxLength){\n      pos[1] = -viewBoxLength;\n  }\n  if(pos[2] < -viewBoxLength){\n      pos[2] = viewBoxLength;\n  }\n  if(pos[2] > viewBoxLength){\n      pos[2] = -viewBoxLength;\n  }\n\n  this.position = pos;\n};\n\nfunction Bullet() {\n  let posB = eye.slice();\n  posB[1] -= 2\n  this.position = posB;\n\n  this.direction = yaw.valueOf();\n}\n\nBullet.prototype.changePosition = function() {\n  this.position = forward(this.position, this.direction, bulletSpeed);\n};\n\nBullet.prototype.wrapIfOutOfBounds = function() {\n  let pos = this.position;\n  if(pos[0] < -viewBoxLength){\n      pos[0] = viewBoxLength;\n  }\n  if(pos[0] > viewBoxLength){\n      pos[0] = -viewBoxLength;\n  }\n  if(pos[1] < -viewBoxLength){\n      pos[1] = viewBoxLength;\n  }\n  if(pos[1] > viewBoxLength){\n      pos[1] = -viewBoxLength;\n  }\n  if(pos[2] < -viewBoxLength){\n      pos[2] = viewBoxLength;\n  }\n  if(pos[2] > viewBoxLength){\n      pos[2] = -viewBoxLength;\n  }\n\n  this.position = pos;\n};\n\n\n\nfunction interf() {\n  if (keyPressed[\"38\"]) eye[1] += shipSpeed; // upp ör\n  if (keyPressed[\"40\"]) eye[1] -= shipSpeed; // niður ör\n  if (keyPressed[\"37\"]) yaw += deltaAngle; // vinstri ör\n  if (keyPressed[\"39\"]) yaw -= deltaAngle; // hægri ör\n  if (keyPressed[\"88\"]) bulletList.add(new Bullet()); // x\n  if (keyPressed[\"90\"]) eye = forward(eye, yaw, shipSpeed); // z\n}\n\n\n\nwindow.onload = function init()\n{\n  canvas = document.querySelector( \"canvas\" );\n\n  gl = WebGLUtils.setupWebGL( canvas );\n  if ( !gl ) { alert( \"WebGL isn't available\" ); }\n\n  // insert vertices into array: points\n  cube();\n  tetrahedron(va, vb, vc, vd, count);\n\n  gl.viewport( 0, 0, canvas.width, canvas.height );\n  gl.clearColor( 0.0, 0.0, 0.0, 1.0 );\n\n  gl.enable(gl.DEPTH_TEST);\n\n  //\n  //  Load shaders and initialize attribute buffers\n  //\n  let program = initShaders( gl, \"vertex-shader\", \"fragment-shader\" );\n  gl.useProgram( program );\n\n  let vBuffer = gl.createBuffer();\n  gl.bindBuffer( gl.ARRAY_BUFFER, vBuffer );\n  gl.bufferData( gl.ARRAY_BUFFER, flatten(points), gl.STATIC_DRAW );\n\n  let vPosition = gl.getAttribLocation( program, \"vPosition\" );\n  gl.vertexAttribPointer( vPosition, 4, gl.FLOAT, false, 0, 0 );\n  gl.enableVertexAttribArray( vPosition );\n\n  proLoc = gl.getUniformLocation( program, \"projectionMatrix\" );\n  mvLoc = gl.getUniformLocation( program, \"modelViewMatrix\" );\n\n  // Event listener for keyboard\n  window.addEventListener('keydown', function(e) {\n    keyPressed[e.keyCode] = true;\n  }, false);\n  document.addEventListener('keyup', function(e) {\n   keyPressed[e.keyCode] = false;\n  }, false);\n\n\n  render();\n}\n\n\n// Initialize asteroids\nlet asteroidList = new List();\nfor(let i=1; i <= initialNumberOfAsteroids; i++){\n  asteroidList.add(new Asteroid(3));\n}\n\nlet bulletList = new List();\n\n//  Render the view\nfunction render()\n{\n  setTimeout(function() {\n      window.requestAnimFrame( render );\n      gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      interf();\n\n      //  proj = perspective(fovy, aspect, near, far)\n      let proj = perspective( 75.0, 1.0, 0.01, 100.0 );\n      gl.uniformMatrix4fv(proLoc, false, flatten(proj));\n\n\n      let currentAsteroid = asteroidList.start;\n      while (currentAsteroid !== null) {\n\n        let position = currentAsteroid.data.position;\n        let realSize = refSize*currentAsteroid.data.size;\n        let mv = mat4();\n        mv = mult(mv, scalem(realSize, realSize, realSize));\n        mv = mult(mv, rotateY(yaw));\n        mv = mult(mv, translate(-eye[0], -eye[1], -eye[2]));\n        mv = mult(mv, translate(position[0], position[1], position[2]));\n\n\n        gl.uniformMatrix4fv(mvLoc, false, flatten(mv));\n        gl.drawArrays( gl.TRIANGLES, 0, NumVerticesAsteroid );\n\n        currentAsteroid.data.changePosition();\n        currentAsteroid.data.wrapIfOutOfBounds();\n\n        currentAsteroid = currentAsteroid.next;\n      }\n\n      let currentBullet = bulletList.start;\n      while (currentBullet !== null) {\n\n        let position = currentBullet.data.position;\n\n\n        let mv = mat4();\n        mv = mult( mv, scalem(bulletSize, bulletSize, bulletSize));\n        mv = mult(mv, rotateY(yaw));\n        mv = mult(mv, translate(-eye[0], -eye[1], -eye[2]));\n        mv = mult( mv, translate(position[0], position[1], position[2]));\n\n        gl.uniformMatrix4fv(mvLoc, false, flatten(mv));\n        gl.drawArrays( gl.TRIANGLES, NumVerticesAsteroid, NumVerticesSphere );\n\n        currentBullet.data.changePosition();\n        currentBullet.data.wrapIfOutOfBounds();\n\n        currentBullet = currentBullet.next;\n      }\n\n  }, 25)\n}\n\n},{\"quaternion\":1}]},{},[2]);\n"]}